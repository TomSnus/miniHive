''' 
        for dic in json_tuple:
            if(isinstance(dic, dict)):
                for k, v in dic.items():
                    for attr in attrs:
                        if isinstance(attr, radb.ast.AttrRef):
                            if k is attr:
                                yield(y, "")
'''

project:
       if(isinstance(condition, radb.ast.ValExprBinaryOp)):
            for k, v in json_tuple.items():
                if isinstance(condition.inputs[0], radb.ast.AttrRef):
                    if isinstance(condition.inputs[1], radb.ast.RAString):
                        if str(condition.inputs[0].name) in str(k):
                            condi = str(condition.inputs[1].val).replace('\'', '')
                            condi = condi.replace('\'', '')
                            if str(condi) in str(v):
                                yield (tuple, tuple)
                    elif isinstance(condition.inputs[1], radb.ast.RANumber):
                        if str(condition.inputs[0].name) in str(k):
                            if str(condition.inputs[1].val) in str(v):
                                yield (tuple, tuple)

python3.6 ra2mr.py SelectTask --querystring "\select_{gender='female'} Person;" --exec-environment LOCAL --local-scheduler
(\\rename_{A:*} Eats) \join_{A.pizza = B.pizza} (\\rename_{B:*} Eats);

"select distinct * from Person, Eats, Serves where Person.name = Eats.name and Eats.pizza = Serves.pizza and Person.age = 16 and Serves.pizzeria = 'Little Ceasars'"
\select_{(((Person.name = Eats.name) and (Eats.pizza = Serves.pizza)) and (Person.age = 16)) and (Serves.pizzeria = 'Little Ceasars')} ((Person \cross Eats) \cross Serves)
